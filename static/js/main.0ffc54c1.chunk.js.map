{"version":3,"sources":["Firebase.js","SignUp.js","Login.js","Hero.js","App.js","index.js"],"names":["fire","firebase","initializeApp","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","db","firestore","Signup","user","setUser","email","setEmail","emailError","password","setPassword","passwordError","handleLogin","handleSignup","hasAccount","handleLogout","setHasAccount","name","setName","handleChangeEmail","e","target","value","handleChangePassword","handleSubmit","alert","handleName","path","exact","render","className","type","required","autoFocus","placeholder","onChange","onClick","to","Login","Hero","App","useState","setEmailError","setPasswordError","clearInputs","auth","signOut","useEffect","onAuthStateChanged","collection","doc","uid","get","then","data","signInWithEmailAndPassword","catch","err","code","message","console","log","createUserWithEmailAndPassword","cred","set","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.0ffc54c1.chunk.js","sourcesContent":["import firebase from \"firebase\";\r\n\r\n\r\nvar firebaseConfig = {\r\n  apiKey: \"AIzaSyAphE-FCaVO_ZnWNhowYov_uwenmhkJTBs\",\r\n  authDomain: \"login-cf917.firebaseapp.com\",\r\n  projectId: \"login-cf917\",\r\n  storageBucket: \"login-cf917.appspot.com\",\r\n  messagingSenderId: \"583756460508\",\r\n  appId: \"1:583756460508:web:5f6b3f07c0163800549f19\",\r\n};\r\n// Initialize Firebase\r\nconst fire = firebase.initializeApp(firebaseConfig);\r\nvar db = firebase.firestore();\r\n\r\nexport { fire, db };\r\n","import React from \"react\";\r\nimport { BrowserRouter as Router, Route, Switch, Link } from \"react-router-dom\";\r\n\r\nfunction Signup({\r\n  user,\r\n  setUser,\r\n  email,\r\n  setEmail,\r\n  emailError,\r\n  password,\r\n  setPassword,\r\n  passwordError,\r\n  handleLogin,\r\n  handleSignup,\r\n  handleLogout,\r\n  hasAccount,\r\n  setHasAccount,\r\n  name,\r\n  setName,\r\n}) {\r\n  const handleChangeEmail = (e) => {\r\n    setEmail(e.target.value);\r\n  };\r\n  const handleChangePassword = (e) => {\r\n    setPassword(e.target.value);\r\n  };\r\n  const handleSubmit = (e) => {\r\n    handleSignup();\r\n    alert(\"user created\");\r\n    return setName(\"\");\r\n  };\r\n  const handleName = (e) => setName(e.target.value);\r\n  return (\r\n    <Router>\r\n      <Switch>\r\n        <Route\r\n          path=\"/Signup\"\r\n          exact\r\n          render={() => (\r\n            <section className=\"login\">\r\n              <div className=\"loginContainer\">\r\n                {/* Name start */}\r\n                <label> Name</label>\r\n                <input\r\n                  type=\"text\"\r\n                  required\r\n                  autoFocus\r\n                  value={name}\r\n                  placeholder=\"firstname & surname\"\r\n                  onChange={handleName}\r\n                />\r\n\r\n                {/* name End */}\r\n\r\n                {/*email Start*/}\r\n                <label>Email</label>\r\n                <input\r\n                  type=\"email\"\r\n                  required\r\n                  value={email}\r\n                  onChange={handleChangeEmail}\r\n                />\r\n                <p className=\"errorMsg\">{emailError}</p>\r\n                {/*email End*/}\r\n\r\n                {/*Password Start*/}\r\n                <label>Password</label>\r\n                <input\r\n                  type=\"password\"\r\n                  required\r\n                  value={password}\r\n                  onChange={handleChangePassword}\r\n                />\r\n                <div className=\"errorMsg\">{passwordError}</div>\r\n\r\n                <div className=\"btnContainer\">\r\n                  {hasAccount ? (\r\n                    <>\r\n                      <button onClick={handleLogin}>Login</button>\r\n                      <p>\r\n                        Don't have an account ?\r\n                        <span onClick={() => setHasAccount(!hasAccount)}>\r\n                          Sign up\r\n                        </span>\r\n                      </p>\r\n                    </>\r\n                  ) : (\r\n                    <>\r\n                      <button onClick={handleSubmit}>Sign Up</button>\r\n                      <p>\r\n                        Have an account\r\n                        <Link\r\n                          to=\"/\"\r\n                         \r\n                         \r\n                         \r\n                          className=\"link\"\r\n                          onClick={() => setHasAccount(!hasAccount)}\r\n                        >\r\n                          Login\r\n                        </Link>\r\n                      </p>\r\n                    </>\r\n                  )}\r\n                </div>\r\n              </div>\r\n            </section>\r\n          )}\r\n        ></Route>\r\n      </Switch>\r\n    </Router>\r\n  );\r\n}\r\n\r\nexport default Signup;\r\n","import React from \"react\";\r\nimport { BrowserRouter as Router, Route, Switch, Link } from \"react-router-dom\";\r\nimport Signup from \"./SignUp\";\r\nfunction Login({\r\n  user,\r\n  setUser,\r\n  email,\r\n  setEmail,\r\n  emailError,\r\n  password,\r\n  setPassword,\r\n  passwordError,\r\n  handleLogin,\r\n  handleSignup,\r\n  handleLogout,\r\n  hasAccount,\r\n  setHasAccount,\r\n  name,\r\n  setName,\r\n}) {\r\n  const handleChangeEmail = (e) => {\r\n    setEmail(e.target.value);\r\n  };\r\n  const handleChangePassword = (e) => {\r\n    setPassword(e.target.value);\r\n  };\r\n  const handleSubmit = (e) => {\r\n    handleSignup();\r\n    return alert(\"user created\");\r\n  };\r\n  const handleName = (e) => setName(e.target.value);\r\n  return (\r\n    <div>\r\n      {hasAccount ? (\r\n        <Router>\r\n          <Switch>\r\n            <Route\r\n              exact\r\n              render={() => (\r\n                <section className=\"login\">\r\n                  <div className=\"loginContainer\">\r\n                    {/*email Start*/}\r\n                    <label>Email</label>\r\n                    <input\r\n                      type=\"email\"\r\n                      required\r\n                      value={email}\r\n                      onChange={handleChangeEmail}\r\n                    />\r\n                    <p className=\"errorMsg\">{emailError}</p>\r\n                    {/*email End*/}\r\n\r\n                    {/*Password Start*/}\r\n                    <label>Password</label>\r\n                    <input\r\n                      type=\"password\"\r\n                      required\r\n                      value={password}\r\n                      onChange={handleChangePassword}\r\n                    />\r\n                    <p className=\"errorMsg\">{passwordError}</p>\r\n\r\n                    <div className=\"btnContainer\">\r\n                      {hasAccount ? (\r\n                        <>\r\n                          <button onClick={handleLogin}>Login</button>\r\n                          <p>\r\n                            Don't have an account ?\r\n                            <Link\r\n                              to=\"/signup\"\r\n                              className=\"link\"\r\n                              onClick={() => setHasAccount(!hasAccount)}\r\n                            >\r\n                              Sign up\r\n                            </Link>\r\n                          </p>\r\n                        </>\r\n                      ) : (\r\n                        <>\r\n                          <button onClick={handleSubmit}>Sign Up</button>\r\n                          <p>\r\n                            Have an account\r\n                            <span onClick={() => setHasAccount(!hasAccount)}>\r\n                              Login\r\n                            </span>\r\n                          </p>\r\n                        </>\r\n                      )}\r\n                    </div>\r\n                  </div>\r\n                </section>\r\n              )}\r\n            ></Route>\r\n          </Switch>\r\n        </Router>\r\n      ) : (\r\n        <Signup\r\n          user={user}\r\n          setUser={setUser}\r\n          email={email}\r\n          setEmail={setEmail}\r\n          emailError={emailError}\r\n          password={password}\r\n          setPassword={setPassword}\r\n          passwordError={passwordError}\r\n          handleLogin={handleLogin}\r\n          handleSignup={handleSignup}\r\n          handleLogout={handleLogout}\r\n          hasAccount={hasAccount}\r\n          setHasAccount={setHasAccount}\r\n          name={name}\r\n          setName={setName}\r\n        />\r\n      )}\r\n      {passwordError}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Login;\r\n","import React from \"react\";\r\n\r\n\r\nfunction Hero({ handleLogout, user, name }) {\r\n  return (\r\n    <section className=\"hero\">\r\n      <nav>\r\n        <h2>Welcome { name }</h2>\r\n        \r\n        <button onClick={handleLogout}>Logout</button>\r\n      </nav>\r\n    </section>\r\n  );\r\n}\r\n\r\nexport default Hero;\r\n","/* eslint-disable default-case */\r\nimport React, { useState, useEffect } from \"react\";\r\nimport {fire, db} from \"./Firebase\";\r\n\r\nimport Login from \"./Login\";\r\nimport Signup from \"./SignUp\";\r\nimport Hero from \"./Hero\";\r\nimport \"./App.css\";\r\n\r\nfunction App() {\r\n  //Hooks\r\n  const [name, setName] = useState(\"\");\r\n  const [user, setUser] = useState(\"\");\r\n  const [email, setEmail] = useState(\"\");\r\n  const [emailError, setEmailError] = useState(\"\");\r\n  const [password, setPassword] = useState(\"\");\r\n  const [passwordError, setPasswordError] = useState(\"\");\r\n  const [hasAccount, setHasAccount] = useState(true);\r\n  const clearInputs = () => {\r\n    // setUser(\"\");\r\n    setEmail(\"\");\r\n    setPassword(\"\");\r\n    setName(\"\");\r\n  };\r\n  const clearErrors = () => {\r\n    setEmailError(\"\");\r\n    setPasswordError(\"\");\r\n  };\r\n\r\n  //Hooks\r\n\r\n  //handles the password and email that are sent to firebase\r\n  const handleLogin = () => {\r\n   clearErrors();\r\n    fire\r\n      .auth()\r\n      .signInWithEmailAndPassword(email, password)\r\n      .catch((err) => {\r\n        switch (err.code) {\r\n          case \"auth/invalid-email\":\r\n          case \"auth/user-disabled\":\r\n          case \"auth/user-not-found\":\r\n            setEmailError(err.message);\r\n            break;\r\n          case \"auth/wrong-password\":\r\n            setPasswordError(err.message);\r\n            console.log(err.message);\r\n            break;\r\n        }\r\n      });\r\n  };\r\n  /// creates a user with password and email\r\n  const handleSignup = () => {\r\n  \r\nclearInputs();\r\n    fire\r\n\r\n      .auth()\r\n      .createUserWithEmailAndPassword(email, password).then(cred=>{\r\n       db.collection(\"users\").doc(cred.user.uid).set({name})\r\n      })\r\n      .catch((err) => {\r\n        switch (err.code) {\r\n          case \"auth/email-already-in-use\":\r\n          case \"auth/invalid-email\":\r\n            setEmailError(err.message);\r\n            break;\r\n          case \"auth/weak-password\":\r\n            setPassword(err.message);\r\n            break;\r\n        }\r\n      \r\n      });\r\n  };\r\n  //Logout function\r\n  const handleLogout = () => {\r\n    fire.auth().signOut();\r\n    clearInputs();\r\n  };\r\n  //function checkouts if user exists in firebase database\r\n  const authListener = () => {\r\n    fire.auth().onAuthStateChanged((user) => {\r\n      if (user) {\r\n        clearInputs();\r\n      db.collection(\"users\").doc(user.uid).get().then(doc=>    setName(doc.data().name))\r\n  \r\n        setUser(user);\r\n      } else {\r\n        setUser(\"\");\r\n      }\r\n    });\r\n  };\r\n  useEffect(() => {\r\n    return authListener();\r\n  }, []);\r\n\r\n  return (\r\n    <div className=\"App\">\r\n      {user ? (\r\n        <Hero\r\n          handleLogout={handleLogout}\r\n          user={user}\r\n          email={email}\r\n          name={name}\r\n        />\r\n      ) :\r\n        <Login\r\n          user={user}\r\n          setUser={setUser}\r\n          email={email}\r\n          setEmail={setEmail}\r\n          emailError={emailError}\r\n          password={password}\r\n          setPassword={setPassword}\r\n          passwordError={passwordError}\r\n          handleLogin={handleLogin}\r\n          handleSignup={handleSignup}\r\n          handleLogout={handleLogout}\r\n          hasAccount={hasAccount}\r\n          setHasAccount={setHasAccount}\r\n          name={name}\r\n          setName={setName}\r\n        />\r\n     \r\n        \r\n      }\r\n    </div>\r\n  );\r\n}\r\nexport default App;\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from \"./App\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}